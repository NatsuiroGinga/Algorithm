class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(nums);

        for (int i = 0; i < nums.length - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            int low = i + 1, high = nums.length - 1;

            while (low < high) {
                int sum = nums[i] + nums[low] + nums[high];
                if (sum < 0) low++;
                else if (sum > 0) high--;
                else {
                    ans.add(Arrays.asList(nums[i], nums[low], nums[high]));

                    while (low + 1 < high && nums[low + 1] == nums[low]) low++;
                    while (low < high - 1 && nums[high - 1] == nums[high]) high--;

                    low++;
                    high--;
                }
            }
        }

        return ans;
    }
}
//runtime:37 ms
//memory:49.7 MB
