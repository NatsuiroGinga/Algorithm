class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(nums);

        for (int i = 0; i < nums.length - 2; i++) {
            
            if (i > 0 && nums[i] == nums[i-1]) continue;

            int low = i + 1, high = nums.length - 1;

            while (low < high) {
                int sum = nums[low] + nums[i] + nums[high];

                if (sum < 0) {
                    low++;
                } else if (sum > 0) {
                    high--;
                } else {
                    Integer[] sub = { nums[i], nums[low], nums[high] };
                    final List<Integer> list = Arrays.asList(sub);
                    ans.add(list);

                    for (; low + 1 < high && nums[low] == nums[low + 1]; low++);
                    for (; high - 1 > low && nums[high] == nums[high - 1]; high--);

                    low++;
                    high--;
                }
            }
        }

        return ans;
    }
}
//runtime:36 ms
//memory:49.4 MB
